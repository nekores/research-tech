# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


trigger:
  batch: true
  branches:
    exclude:
    - master
  tags:
    exclude:
      - v*.*.*

pool:
  vmImage: 'windows-latest'

jobs:
- job: Knockout
  steps:
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/"
      Contents: "package.json"
      TargetFolder: "$(Build.SourcesDirectory)/Temp/"
      OverWrite: true
    displayName: "Copy package.json for cache key"
  - task: Cache@2
    inputs:
      key: 'npm-cache-library | $(Build.SourcesDirectory)/Temp/package.json'
      path: $(Build.SourcesDirectory)/node_modules
      cacheHitVar: NPM_CACHE_RESTORED
    displayName: Cache NPM

  - task: Npm@1
    displayName: 'NPM install'
    inputs:
      command: install
      verbose: false
    condition: ne(variables.NPM_CACHE_RESTORED, 'true')
  
  - script: |
      npm run build_knockout_prod
    displayName: 'build prod'

  - script: |
      npm run visual-regression-tests:ci:knockout 
    displayName: 'Visual Regression Tests'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/visualRegressionTests'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Library_Knockout_VRT'
      OverWrite: true
    condition: always()
    displayName: 'copy vrt artifacts'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/Library_Knockout_VRT/'
      ArtifactName: 'Library_Knockout_VRT'
      publishLocation: 'Container'
    condition: always()
    displayName: 'publish vrt artifacts'

- job: React
  steps:
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/"
      Contents: "package.json"
      TargetFolder: "$(Build.SourcesDirectory)/Temp/"
      OverWrite: true
    displayName: "Copy package.json for cache key"

  - task: Cache@2
    inputs:
      key: 'npm-cache-library | $(Build.SourcesDirectory)/Temp/package.json'
      path: $(Build.SourcesDirectory)/node_modules
      cacheHitVar: NPM_CACHE_RESTORED
    displayName: Cache NPM

  - task: Npm@1
    displayName: 'NPM install'
    inputs:
      command: install
      verbose: false
    condition: ne(variables.NPM_CACHE_RESTORED, 'true')
  
  - script: |
      npm run build_react_prod
    displayName: 'build prod'

  - script: |
      npm run visual-regression-tests:ci:react 
    displayName: 'Visual Regression Tests'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/visualRegressionTests'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Library_React_VRT'
      OverWrite: true
    condition: always()
    displayName: 'copy vrt artifacts'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/Library_React_VRT/'
      ArtifactName: 'Library_React_VRT'
      publishLocation: 'Container'
    condition: always()
    displayName: 'publish vrt artifacts'

- job: Vue
  steps:
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/"
      Contents: "package.json"
      TargetFolder: "$(Build.SourcesDirectory)/Temp/"
      OverWrite: true
    displayName: "Copy package.json for cache key"
  - task: Cache@2
    inputs:
      key: 'npm-cache-library | $(Build.SourcesDirectory)/Temp/package.json'
      path: $(Build.SourcesDirectory)/node_modules
      cacheHitVar: NPM_CACHE_RESTORED
    displayName: Cache NPM

  - task: Npm@1
    displayName: 'NPM install'
    inputs:
      command: install
      verbose: false
    condition: ne(variables.NPM_CACHE_RESTORED, 'true')
  
  - script: |
      npm run build_vue_prod
    displayName: 'build prod'

  - script: |
      npm run visual-regression-tests:ci:vue 
    displayName: 'Visual Regression Tests'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/visualRegressionTests'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Library_Vue_VRT'
      OverWrite: true
    condition: always()
    displayName: 'copy vrt artifacts'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/Library_Vue_VRT/'
      ArtifactName: 'Library_Vue_VRT'
      publishLocation: 'Container'
    condition: always()
    displayName: 'publish vrt artifacts'